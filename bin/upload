#!/usr/bin/env php
<?php

requireAutoloader();

function requireAutoloader()
{
    $autoloadPaths = [
        // Package was included as a library
        __DIR__ . '/../../../autoload.php',
        // Local package usage
        __DIR__ . '/../vendor/autoload.php',
        // Local package in packages folder
        __DIR__ . '/../../../vendor/autoload.php',
        __DIR__ . '/../../../../vendor/autoload.php',
        // Local package in packages folder as symlink in extension
        __DIR__ . '/../../../.Build/vendor/autoload.php',
    ];
    foreach ($autoloadPaths as $path) {
        if (file_exists($path)) {
            /** @noinspection PhpIncludeInspection */
            return file_exists($path) && include $path;
        }
    }

    $msg = 'You must set up the project dependencies, run the following commands:' . PHP_EOL .
        'curl -sS https://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL;
    fwrite(STDERR, $msg);
    exit(1);
}

if (3 > count($argv)) {
    die(
        'Upload command requires a total of at least three arguments in the following order: directory username password (comment)'
        . PHP_EOL
    );
}

[, $directory, $username, $password] = $argv;
$comment = true === isset($argv[4]) ? $argv[4] : null;

$uploader = new \NamelessCoder\TYPO3RepositoryClient\Uploader();
$directory = realpath($directory);
try {
    $result = $uploader->upload($directory, $username, $password, $comment);
} catch (\SoapFault $error) {
    echo 'SOAP error: ' . $error->getMessage() . PHP_EOL;
    exit(1);
} catch (\RuntimeException $error) {
    echo 'Runtime error: ' . $error->getMessage() . PHP_EOL;
    exit(1);
}

if (true === isset($result[\NamelessCoder\TYPO3RepositoryClient\Connection::SOAP_RETURN_VERSION])) {
    echo 'Succesfully uploaded new version: '
        . $result[\NamelessCoder\TYPO3RepositoryClient\Connection::SOAP_RETURN_VERSION] . PHP_EOL;
}

if (true === isset($result[\NamelessCoder\TYPO3RepositoryClient\Connection::SOAP_RETURN_MESSAGES])) {
    foreach ($result[\NamelessCoder\TYPO3RepositoryClient\Connection::SOAP_RETURN_MESSAGES] as $index => $message) {
        echo 'Message #' . ($index + 1) . ': ' . $message . PHP_EOL;
    }
}

exit(0);
